{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Multi-Agent-Control-Quadruped-Meets-UR5","text":""},{"location":"#project-fusion-robotics-a-quadruped-ur5-robotics-testbed","title":"Project: Fusion Robotics: A Quadruped-UR5 Robotics Testbed","text":"<p>Team Number: Team 01</p> <p>Team Members: </p> <ol> <li>Jeevan Hebbal Manjunath</li> <li>Yeshwanth Reddy Gurreddy</li> <li>Aniruddha Anand Damle</li> </ol> <p>Semester and Year: Spring 2025</p> <p>University, Class, and Professor: - University: Arizona State University - Class: Experimentation and Deployment of Robotic Systems - Professor: Dr. Daniel M. Aukes</p>"},{"location":"#3-project-plan","title":"3. Project Plan","text":""},{"location":"#31-high-level-concept-and-research-question","title":"3.1 High-Level Concept and Research Question","text":"<p>Our project aims to co-ordinate a UR5 robotic arm with a quadruped robot to facilitate advanced experimental setups. The central research question is: \"How can the integration of sensor data and simulation models optimize the accuracy and efficiency of experimental setups in laboratories\" The experiment involves using the UR5 to position the quadruped at a designated start point, triggering the quadruped to run in a specified direction, and collecting sensor data during its motion. We then broadcast this data to a server for analysis, comparing it with simulated data. The refined simulation results are subsequently applied back to the robot to evaluate improvements in performance forming a closed loop.</p> <p> Figure 1: Illustrates the the design of quadruped, which is used for sensor data collection.</p>"},{"location":"#32-sensor-integration","title":"3.2 Sensor Integration","text":"<p>Sensor integration is critical to our experimental setup. We plan to collect a range of sensor data (e.g., IMU, Ultrasonic, joint encoders, Camera) during the quadruped\u2019s run. This data will be processed and filtered in real time to remove noise and extract meaningful features. In testing, sensors will validate both the starting position and the dynamic state of the quadruped. In the final demonstration, real-time sensor feedback will be used to adjust simulation parameters and fine-tune control algorithms, ensuring the robot operates optimally even under environmental variations.</p>"},{"location":"#33-interaction-and-interface-development","title":"3.3 Interaction and Interface Development","text":"<p>Interaction with the system will be two-fold:  </p> <ol> <li>Visualization &amp; Monitoring:    A user-friendly interface will display real-time sensor data, simulation comparisons, and status of hardware integration. This interface will allow operators to observe and intervene if necessary.  </li> <li>Data Storage and Interaction:    The system will log all sensor data and simulation outputs for post-experiment analysis. This will enable retrospective analysis and adjustments to the simulation model.</li> </ol> <p> Figure 2: Experimental setup rendering.</p>"},{"location":"#34-control-and-autonomy","title":"3.4 Control and Autonomy","text":"<p>To enable efficient data collection and autonomous operation, we will implement a sensor-driven control loop that dynamically adjusts the quadruped\u2019s trajectory based on real-time feedback. The control system consists of two layers:</p>"},{"location":"#341-control-architecture","title":"3.4.1 Control Architecture","text":"<ul> <li> <p>Low-Level Control: </p> <ul> <li>Regulates the quadruped\u2019s locomotion using real-time sensor input.  </li> <li>Ensures stability and responsiveness as it traverses the path while collecting data.  </li> </ul> </li> <li> <p>High-Level Decision Making: </p> <ul> <li>Oversees the overall mission strategy.  </li> <li>Triggers the UR5 robotic arm to reset the quadruped\u2019s position once it reaches the end of the path.  </li> </ul> </li> </ul>"},{"location":"#342-system-functionality","title":"3.4.2 System Functionality","text":"<ol> <li>The quadruped autonomously walks forward along a predefined path, continuously collecting sensor data.  </li> <li>Once it reaches the end of the path, the UR5 robotic arm lifts the quadruped and places it back at its starting position, enabling continuous operation.  </li> </ol> <p>By combining adaptive locomotion with robotic manipulation, this approach ensures an efficient and continuous workflow for autonomous operations.  </p>"},{"location":"#35-preparation-needs","title":"3.5 Preparation Needs","text":"<p>Successful execution of this project requires a solid understanding of several topics:</p> <ul> <li>Robotic Kinematics and Dynamics: To accurately control the UR5 and quadruped.</li> <li>Sensor Fusion Techniques: To integrate and filter data from multiple sensor sources.</li> <li>Control Systems and Autonomous Algorithms: To design robust feedback loops.</li> </ul> <p>Some of these topics will be reviewed in class; however, additional self-study and consultation with experts may be necessary to cover gaps, especially in advanced sensor fusion.</p>"},{"location":"#36-final-demonstration","title":"3.6 Final Demonstration","text":"<p>Our final demonstration will showcase the complete integration and functioning of the hybrid robotic system:</p> <ul> <li>Resources Required: <ul> <li>UR5 robotic arm and quadruped robot  </li> <li>Sensor suite (IMU, Ultrasonic, Encoders, Camera etc.)  </li> <li>High-performance computing for data processing  </li> </ul> </li> <li>Classroom Setup Requirements: <ul> <li>A designated space for robotic operation with ample room for the quadruped to maneuver  </li> <li>A projection system to display the interface and sensor data  </li> </ul> </li> <li>Environmental Variability Handling:     The system will be tested under different lighting and surface textures to ensure that the control algorithms are robust enough to handle variability.</li> <li>Testing &amp; Evaluation Plan:     Multiple test runs will be conducted to verify system performance. We will compare sensor data and simulation outputs against known benchmarks, ensuring that our control strategies adapt correctly to environmental changes.</li> </ul>"},{"location":"#37-impact-of-the-work","title":"3.7 Impact of the Work","text":"<p>This project has the potential to significantly enhance our understanding of real-time sensor integration and feedback control in hybrid robotic systems. By bridging experimental data with simulation, we expect to drive forward research in autonomous decision-making processes. Additionally, the project will provide valuable insights that can contribute to course development, encouraging further exploration into sensor fusion, control algorithms, and robotic autonomy.</p>"},{"location":"#38-advising","title":"3.8 Advising","text":"<p>Our project advisor will be Dr. Daniel M. Aukes, who has expressed willingness to provide mentoring and access to specialized hardware resources. Dr. Aukes' guidance will be pivotal in ensuring the project\u2019s technical challenges are addressed effectively. His expectations include regular progress reports, adherence to project milestones, and active participation in troubleshooting sessions. Additional resources, such as access to the lab and advanced simulation tools, have been confirmed to support our experimental setup.</p>"},{"location":"#4-weekly-milestones-weeks-7-16","title":"4. Weekly Milestones (Weeks 7-16)","text":"<p>Below is a table outlining our weekly milestones, covering hardware integration, interface development, sensor handling, and control/autonomy:</p> Week Hardware Integration 7 Initialize UR5 for positioning the quadruped at the start point 8 Validate communication between UR5 and host machine 9 Quadruped calibration and mobility tuning 10 Initiate quadruped hardware setup; perform basic mobility tests 11 Fine-tune mechanical alignment and sensor mounts 12 Full hardware integration test with dynamic movements 13 Begin integrated system tests (hardware + sensor + control) 14 Final integration and system robustness testing 15 Optimmizing communication 16 Prepare hardware for final demonstration <p>This document outlines our comprehensive plan for the project and serves as the foundation for our website\u2019s main page. Each section details the essential aspects of the project, ensuring clarity in execution and evaluation.</p>"},{"location":"RasPi-table/","title":"RasPi-Table","text":"<p>The table below lists the components required for the project along with their descriptions and purchase links.</p>"},{"location":"RasPi-table/#components-list","title":"Components List","text":"Component Quantity Description Link Raspberry Pi Zero 2 WH 1 Pre-soldered header, Quad-Core 1GHz CPU, 512MB RAM, Wi-Fi &amp; Bluetooth, Mini HDMI, 40 GPIO, CSI Camera Port (2023 Edition) Amazon Raspberry Pi Camera (Arducam 5MP) 1 1080P HD OV5647 Camera Module V1 for Pi 5, Pi 4, Raspberry Pi 3, 3B+, and Other A/B Series Amazon OpenRB-150 1 ROBOTIS OpenRB-150 development board ROBOTIS Adafruit BNO055 9-DOF IMU 1 Absolute Orientation IMU Fusion Breakout AdaFruit 450mAh LiPo Battery 1 TATTU 11.1V 3S 450mAh 75C LiPo Battery Amazon Step-Down Voltage Regulator ? 12V to 5V 5A Converter Step-Down Power Supply Amazon DYNAMIXEL XL330-M288-T Servo 1 High-performance servo motor from ROBOTIS ROBOTIS"},{"location":"charts/","title":"Charts","text":"<pre><code>graph TD;\n    A[\ud83d\udd04 Start System Process] --&gt;|Initialize Simulation| B\n    B[\ud83d\udda5\ufe0f Server: Simulate Quadruped Parameters&lt;br/&gt;&lt;i&gt;Define Motion Plan &amp; Constraints&lt;/i&gt;] --&gt; C\n    C[\ud83d\udce1 Server: Transmit Control Signals &amp; Parameters to Quadruped&lt;br/&gt;&lt;i&gt;Ensure Reliable Data Transmission&lt;/i&gt;] --&gt; D\n    D[\ud83e\udd16 Quadruped: Execute Movement Command&lt;br/&gt;&lt;i&gt;Begin Motion Based on Input&lt;/i&gt;] --&gt; E\n    E[\ud83d\udcca Quadruped: Collect Real-time Sensor Data&lt;br/&gt;&lt;i&gt;IMU, Position, Velocity, Torque&lt;/i&gt;] --&gt; F\n    F[\ud83d\udcf6 Sensor Data: Transmit Feedback to Server&lt;br/&gt;&lt;i&gt;Real-time Data Streaming&lt;/i&gt;] --&gt; G\n\n    G[\ud83d\udccd Quadruped: Complete Movement&lt;br/&gt;&lt;i&gt;Update Final Position&lt;/i&gt;] --&gt;|Evaluate Position Accuracy| H\n\n    H{\u2699\ufe0f Is Quadruped at Desired Position?} \n    H --&gt;|Yes| I\n    H --&gt;|No Recalibrate Parameters| B\n\n    I[\ud83e\udd16 UR5 Robotic Arm: Receive Position Data&lt;br/&gt;&lt;i&gt;Calculate Optimal Grasp&lt;/i&gt;] --&gt; J\n    J[\ud83e\udd16 UR5: Retrieve Quadruped &amp; Transport Back to Start&lt;br/&gt;&lt;i&gt;Ensure Secure Handling&lt;/i&gt;] --&gt; K\n    K[\ud83d\udda5\ufe0f Server: Receive Performance Data for Analysis&lt;br/&gt;&lt;i&gt;Compare Expected vs Actual&lt;/i&gt;] --&gt; L\n    L[\ud83d\udcca Server: Analyze Data &amp; Optimize Parameters&lt;br/&gt;&lt;i&gt;Adjust Control Gains, Motion Strategy&lt;/i&gt;] --&gt; A\n\n    %% Styles for better visualization\n    classDef startStyle fill:#CAAEFF,stroke:#333,stroke-width:2px;\n    classDef processStyle fill:#85D3FF,stroke:#333,stroke-width:1px;\n    classDef decisionStyle fill:#ff6666,stroke:#333,stroke-width:1px,font-weight:bold;\n\n    class A startStyle;\n    class B,C,D,E,F,G,I,J,K,L processStyle;\n    class H decisionStyle;</code></pre>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\n  loader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\n  const svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\n  console.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"}]}